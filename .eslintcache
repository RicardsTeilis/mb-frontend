[{"C:\\Projects\\mb-frontend\\src\\index.tsx":"1","C:\\Projects\\mb-frontend\\src\\reportWebVitals.ts":"2","C:\\Projects\\mb-frontend\\src\\App.tsx":"3","C:\\Projects\\mb-frontend\\src\\config\\routes.ts":"4","C:\\Projects\\mb-frontend\\src\\pages\\home.tsx":"5","C:\\Projects\\mb-frontend\\src\\pages\\navbar.tsx":"6","C:\\Projects\\mb-frontend\\src\\pages\\users.tsx":"7","C:\\Projects\\mb-frontend\\src\\components\\Users.tsx":"8","C:\\Projects\\mb-frontend\\src\\components\\FormNewsletter.tsx":"9"},{"size":478,"mtime":1611916572750,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1121,"mtime":1612185675808,"results":"13","hashOfConfig":"11"},{"size":402,"mtime":1611920690691,"results":"14","hashOfConfig":"11"},{"size":2010,"mtime":1612516152374,"results":"15","hashOfConfig":"11"},{"size":272,"mtime":1611919873073,"results":"16","hashOfConfig":"11"},{"size":184,"mtime":1611999910262,"results":"17","hashOfConfig":"11"},{"size":4076,"mtime":1612518881038,"results":"18","hashOfConfig":"11"},{"size":4283,"mtime":1612518087970,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"h67gns",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"C:\\Projects\\mb-frontend\\src\\index.tsx",[],["44","45"],"C:\\Projects\\mb-frontend\\src\\reportWebVitals.ts",[],"C:\\Projects\\mb-frontend\\src\\App.tsx",[],"C:\\Projects\\mb-frontend\\src\\config\\routes.ts",[],"C:\\Projects\\mb-frontend\\src\\pages\\home.tsx",["46","47","48","49","50","51","52"],"import React from 'react';\r\nimport IPage from '../interfaces/page';\r\nimport '../styles/main.scss';\r\nimport '../styles/tables.scss';\r\nimport logo from '../img/pineapple.png';\r\nimport logoText from '../img/pineapple-text.png';\r\nimport FormNewsletter from '../components/FormNewsletter';\r\nimport { GrFacebookOption, GrInstagram, GrTwitter, GrYoutube } from 'react-icons/gr';\r\n\r\nconst HomePage: React.FC<IPage> = props => {\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"left-side\">\r\n                    <div className=\"navbar\">\r\n                        <div className=\"logo-box\">\r\n                            <img src={logo} className=\"pineapple\" alt=\"\"/> <img className=\"pineapple-text\" src={logoText} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"navigation\">\r\n                            <ul className=\"nav-items\">\r\n                                <li><a href=\"#\">About</a></li>\r\n                                <li><a href=\"#\">How it works</a></li>\r\n                                <li><a href=\"#\">Contact</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content\">\r\n\r\n                        <FormNewsletter />\r\n\r\n                        <hr/>\r\n\r\n                        <div className=\"social-box\">\r\n                            <a href=\"#\"><span className=\"fb-link\"><GrFacebookOption /></span></a>\r\n                            <a href=\"#\"><span className=\"in-link\"><GrInstagram /></span></a>\r\n                            <a href=\"#\"><span className=\"tw-link\"><GrTwitter /></span></a>\r\n                            <a href=\"#\"><span className=\"yt-link\"><GrYoutube /></span></a>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"right-side\"></div>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Projects\\mb-frontend\\src\\pages\\navbar.tsx",[],["53","54"],"C:\\Projects\\mb-frontend\\src\\pages\\users.tsx",[],"C:\\Projects\\mb-frontend\\src\\components\\Users.tsx",["55"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n//import IUsers from '../interfaces/users';\r\n\r\ninterface IUser {\r\n    id: number,\r\n    dateCreated: string,\r\n    email: string,\r\n    emailProvider: string\r\n}\r\n\r\ninterface IEmailProviders {\r\n    [index: string]: string\r\n}\r\n\r\nconst Users: React.FC = () => {\r\n\r\n    const [usersData, setUsersData] = useState<IUser[]>([]);\r\n    const [providers, setProviders] = useState<IEmailProviders[]>([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [orderBy, setOrderBy] = useState('dateCreated');\r\n    const [filter, setFilter] = useState('none');\r\n\r\n    const [previousPage, setPreviousPage] = useState();\r\n    const [totalPages, setTotalPages] = useState([]);\r\n    const [nextPage, setNextPage] = useState(2);\r\n\r\n    const getUsers = (page: number, orderBy: string, filter: string) => {\r\n        setPage(page);\r\n        setOrderBy(orderBy);\r\n        setFilter(filter);\r\n\r\n        axios.get(`http://localhost/mb-backend/api/users?page=${page}&orderBy=${orderBy}&filterBy=${filter}`)\r\n            .then(res => {\r\n                setUsersData(res.data.userData)\r\n                setPreviousPage(res.data.previousPage)\r\n                setNextPage(res.data.nextPage)\r\n                setProviders(res.data.providers)\r\n                setTotalPages(res.data.totalPages)\r\n\r\n                console.log(res.data.providers)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    const deleteUser = (id: number) => {\r\n        axios.delete(`http://localhost/mb-backend/api/delete?id=${id}`)\r\n            .then(res => {\r\n                alert('Deleted')\r\n                getUsers(page, orderBy, filter)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers(page, orderBy, filter)\r\n    }, [])\r\n\r\n    return (\r\n        <section id=\"users\">\r\n            <div>\r\n                <span>Order by: </span><button onClick={() => getUsers(page, 'email', filter)}>Email</button><button onClick={() => getUsers(page, 'dateCreated', filter)}>Date created</button>\r\n            </div>\r\n            <div>\r\n                <span>Filter by: </span>\r\n                {\r\n                    providers.map((p, index) => (\r\n                        <button onClick={() => getUsers(page, orderBy, p.emailProvider)}>{p.emailProvider}</button>\r\n                    ))\r\n                }\r\n                <button onClick={() => getUsers(page, orderBy, 'none')}>Clear filter</button>\r\n            </div>\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Date created</td>\r\n                        <td>Email</td>\r\n                        <td>Email provider</td>\r\n                        <td>Delete</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {usersData.map(user => (\r\n                        <tr key={user.id}>\r\n                            <td>{user.dateCreated}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.emailProvider}</td>\r\n                            <td><button onClick={() => deleteUser(user.id)}>Delete</button></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <div>\r\n                {\r\n                    previousPage\r\n                    ? <button onClick={() => getUsers(page - 1, orderBy, filter)}>Previous</button>\r\n                    : <button disabled>Previous</button>\r\n                }\r\n\r\n                {\r\n                    totalPages.map(p => (\r\n                        <button onClick={() => getUsers(p, orderBy, filter)}>{p}</button>\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    nextPage\r\n                    ? <button onClick={() => getUsers(page + 1, orderBy, filter)}>Next</button>\r\n                    : <button disabled>Next</button>\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Projects\\mb-frontend\\src\\components\\FormNewsletter.tsx",["56","57","58","59"],"import React, { FormEvent } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState, useEffect } from 'react';\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport axios from 'axios';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport successIcon from '../img/success.png';\r\n\r\ninterface IFormNewsletter {\r\n    email: string;\r\n    emailProvider: string;\r\n    dateCreated: number;\r\n    check: any;\r\n}\r\n\r\nconst FormNewsletter: React.FC = () => {\r\n    \r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    const { register, handleSubmit, errors, formState } = useForm<IFormNewsletter>();\r\n\r\n    const onSubmit = (data: IFormNewsletter) => {\r\n\r\n        data.emailProvider = data.email.split('@')[1];\r\n        data.dateCreated = Math.round((new Date()).getTime() / 1000);\r\n\r\n        axios.post('http://localhost/mb-backend/api/create', {\r\n            email: data.email,\r\n            emailProvider: data.emailProvider,\r\n            dateCreated: data.dateCreated\r\n          })\r\n          .then(() => {\r\n            setIsVisible(true)\r\n          }, (error) => {\r\n            console.log(error);\r\n          });\r\n    };\r\n\r\n    const submitForm = () => {\r\n        \r\n    }\r\n    \r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className=\"success-div\" style={{ display: isVisible ? \"block\" : \"none\" }}>\r\n                <img src={successIcon} alt=\"\"/>\r\n\r\n                <h1 className=\"h1-thanks\">Thanks for subscribing!</h1>\r\n                <div className=\"intro-text intro-success\">\r\n                    You have successfully subscribed to our email listing. Check your email for the discount code.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-div\" style={{ display: isVisible ? \"none\" : \"block\" }}>\r\n                <h1>Subscribe to newsletter</h1>\r\n                <div className=\"intro-text\">\r\n                    Subscribe to our newsletter and get 10% discount on pineapple glasses.\r\n                </div>\r\n\r\n                <div className=\"form-box\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                        <div className=\"input-box\">\r\n\r\n                            <ErrorMessage\r\n                                errors={errors}\r\n                                name=\"email\"\r\n                                render={({ message }) => <div className=\"error-box\">{message}</div>}\r\n                            />\r\n\r\n                            <input ref={register({\r\n                                required: \"Email is required\",\r\n                                pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                message: \"Invalid email address\"\r\n                                }\r\n                            })}\r\n                            className=\"newsletter\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Type your email address here…\" />\r\n                            <button disabled={formState.isSubmitting} type=\"submit\" className=\"submit\" name=\"submit\" id=\"submit\"><BsArrowRight className=\"submit-arrow\" /></button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"tos-box\">\r\n                            <ErrorMessage\r\n                                errors={errors}\r\n                                name=\"tos\"\r\n                                render={({ message }) => <div className=\"error-box\">{message}</div>}\r\n                            />\r\n                            <label className=\"check-container\">\r\n                                <input id=\"myCheck\" name=\"tos\" type=\"checkbox\" ref={register({\r\n                                    required: \"You have to accept the terms of service\"\r\n                                })} />\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                            <span className=\"tos-label\">I agree to <a href=\"#\">terms of service</a></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default FormNewsletter;",["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":24,"column":37,"nodeType":"68","endLine":24,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":25,"column":37,"nodeType":"68","endLine":25,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":26,"column":37,"nodeType":"68","endLine":26,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":38,"column":29,"nodeType":"68","endLine":38,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":39,"column":29,"nodeType":"68","endLine":39,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":40,"column":29,"nodeType":"68","endLine":40,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":41,"column":29,"nodeType":"68","endLine":41,"endColumn":41},{"ruleId":"62","replacedBy":"69"},{"ruleId":"64","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":60,"column":8,"nodeType":"73","endLine":60,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":3,"column":20,"nodeType":"77","messageId":"78","endLine":3,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":39,"column":11,"nodeType":"77","messageId":"78","endLine":39,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":100,"column":68,"nodeType":"68","endLine":100,"endColumn":80},{"ruleId":"62","replacedBy":"81"},{"ruleId":"64","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["83"],["84"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filter', 'orderBy', and 'page'. Either include them or remove the dependency array.","ArrayExpression",["85"],"@typescript-eslint/no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'submitForm' is assigned a value but never used.",["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [filter, orderBy, page]",{"range":"88","text":"89"},[1853,1855],"[filter, orderBy, page]"]